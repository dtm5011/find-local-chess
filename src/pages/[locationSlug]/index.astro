---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const locations = await getCollection('locations');
  return locations.map((location) => ({
    params: { locationSlug: location.slug },
    props: { location },
  }));
}

const { locationSlug } = Astro.params;
const { location } = Astro.props;
const allEvents = await getCollection('events');
const locationEvents = allEvents.filter(event => event.data.locationSlug === locationSlug);

const eventsByDay: Record<string, CollectionEntry<"events">[]> = locationEvents.reduce((acc: Record<string, CollectionEntry<"events">[]>, event) => {
  const day = event.data.day;
  if (!acc[day]) {
    acc[day] = [];
  }
  acc[day].push(event);
  return acc;
}, {});

const daysOrder = [
  'Monday',
  'Tuesday',
  'Wednesday',
  'Thursday',
  'Friday',
  'Saturday',
  'Sunday',
];

const sortedDays = Object.keys(eventsByDay).sort(
  (a, b) => daysOrder.indexOf(a) - daysOrder.indexOf(b)
);
---

<BaseLayout title={`${location.data.name} Chess Events`}>
  <div class="container">
    <section class="hero">
      <h1>Chess Events in {location.data.name}</h1>
      <p>{location.data.description}</p>
    </section>

    {sortedDays.length > 0 ? (
      sortedDays.map(day => (
        <section>
          <h2>{day}</h2>
          <div class="grid">
            {eventsByDay[day].map((event) => (
              <wa-card>
                <h3 slot="header">
                  <a href={`/find-local-chess/${locationSlug}/events/${event.slug}`}>{event.data.title}</a>
                </h3>
                <div>
                  <p><strong>Time:</strong> {event.data.time}</p>
                  <p><strong>Location:</strong> {event.data.location}</p>
                  {event.data.entryFee && <p><strong>Entry Fee:</strong> {event.data.entryFee}</p>}
                </div>
                <p>{event.data.description}</p>
                <div class="tags">
                  {event.data.tags.map(tag => (
                    <wa-tag variant="brand">{tag}</wa-tag>
                  ))}
                </div>
              </wa-card>
            ))}
          </div>
        </section>
      ))
    ) : (
      <p>No events found for {location.data.name}. <a href="/find-local-chess/contribute">Add an event!</a></p>
    )}
  </div>
</BaseLayout>

<style>
  .hero {
    text-align: center;
    padding: 4rem 0;
  }

  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
  }

  wa-card {
    background-color: var(--wa-color-surface-raised);
    border: 1px solid var(--wa-color-surface-border);
    box-shadow: var(--wa-shadow-s);
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
  }
</style>