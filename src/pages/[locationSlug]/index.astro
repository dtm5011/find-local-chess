---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const locations = await getCollection('locations');
  return locations.map((location) => ({
    params: { locationSlug: location.slug },
    props: { location },
  }));
}

const { locationSlug } = Astro.params;
const { location } = Astro.props;
const allEvents = await getCollection('events');
const locationEvents = allEvents.filter(event => event.data.locationSlug === locationSlug);

const eventsByDay = locationEvents.reduce((acc, event) => {
  const day = event.data.day;
  if (!acc[day]) {
    acc[day] = [];
  }
  acc[day].push(event);
  return acc;
}, {});

const daysOrder = [
  'Monday',
  'Tuesday',
  'Wednesday',
  'Thursday',
  'Friday',
  'Saturday',
  'Sunday',
];

const sortedDays = Object.keys(eventsByDay).sort(
  (a, b) => daysOrder.indexOf(a) - daysOrder.indexOf(b)
);
---

<BaseLayout title={`${location.data.name} Chess Events`}>
  <div class="page-container">
    <wa-card class="grid-span-all">
      <section>
        <h1>Chess Events in {location.data.name}</h1>
        <p>{location.data.description}</p>
      </section>
    </wa-card>

    {sortedDays.length > 0 ? (
      sortedDays.map(day => (
        <wa-card>
          <section>
            <h2>{day}</h2>
            <div class="events-list">
              {eventsByDay[day].map((event) => (
                <wa-card>
                  <div class="event-content">
                    <h3>
                      <a href={`/${locationSlug}/events/${event.slug}`}>{event.data.title}</a>
                    </h3>
                    <div class="event-details">
                      <span>üïê {event.data.time}</span>
                      <span>üìç {event.data.location}</span>
                      {event.data.entryFee && <span>üí∞ {event.data.entryFee}</span>}
                    </div>
                    <p>{event.data.description}</p>
                    <div class="event-tags">
                      {event.data.tags.map(tag => (
                        <span class="tag">{tag}</span>
                      ))}
                    </div>
                  </div>
                </wa-card>
              ))}
            </div>
          </section>
        </wa-card>
      ))
    ) : (
      <wa-card>
        <p>No events found for {location.data.name}. <a href="/contribute">Add an event!</a></p>
      </wa-card>
    )}
  </div>
</BaseLayout>

<style>
  wa-card + wa-card {
    margin-top: 2rem;
  }

  section {
    margin: 0;
  }

  .events-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin: 2rem 0;
  }
  
  
  
  .event-content h3 {
    margin-top: 0;
    margin-bottom: 1rem;
  }
  
  .event-content h3 a {
    text-decoration: none;
    color: var(--color-text);
  }
  
  .event-content h3 a:hover {
    text-decoration: underline;
  }
  
  .event-details {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: var(--color-text);
  }
  
  .event-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }
  
  .tag {
    background: var(--color-link);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.875rem;
  }
</style>