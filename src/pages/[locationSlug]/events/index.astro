---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { sanityClient } from 'sanity:client';
import { slugifyLocation, formatTimeRange } from '../../../lib/utils';

const { locationSlug } = Astro.params;

// Find the location name by reverse-looking up from all events
const allLocationsQuery = `*[_type == "event" && !(_id in path("drafts.**"))]{
  "location": location,
}`;

const allEvents = await sanityClient.fetch(allLocationsQuery);
const allLocations = [...new Set(allEvents.map(event => event.location))];

// Find the location that matches this slug
const location = allLocations.find(loc => slugifyLocation(loc) === locationSlug);

if (!location) {
  return Astro.redirect('/404');
}

// Get events for this location
const eventsQuery = `*[_type == "event" && location == $location && !(_id in path("drafts.**"))]{
  ...,
  "slug": slug.current
} | order(dayOfWeek)`;

const locationEvents = await sanityClient.fetch(eventsQuery, { location });

// Group events by day of the week
const eventsByDay: Record<string, any[]> = locationEvents.reduce((acc: Record<string, any[]>, event) => {
  const day = event.dayOfWeek;
  if (!acc[day]) {
    acc[day] = [];
  }
  acc[day].push(event);
  return acc;
}, {});

const daysOrder = [
  'Monday',
  'Tuesday',
  'Wednesday',
  'Thursday',
  'Friday',
  'Saturday',
  'Sunday',
];

const sortedDays = Object.keys(eventsByDay).sort(
  (a, b) => daysOrder.indexOf(a) - daysOrder.indexOf(b)
);
---

<BaseLayout title={`Chess Events in ${location}`}>
  <div>
    <section>
      <h1>Events in {location}</h1>
      
      <div>
        {sortedDays.map(day => (
          <section>
            <h2>{day}</h2>
            <div>
              {eventsByDay[day].map((event) => (
                <a href={`/${slugifyLocation(location)}/events/${event.slug}`}>
                  <h3>{event.title}</h3>
                  <p>{formatTimeRange(event.startTime, event.endTime)}</p>
                  <p>{event.venue}</p>
                </a>
              ))}
            </div>
          </section>
        ))}
      </div>
    </section>
  </div>
</BaseLayout>