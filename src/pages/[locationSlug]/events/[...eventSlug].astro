---
import { getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { slugifyLocation } from '../../../lib/utils';

export async function getStaticPaths() {
  const allEvents = await getCollection('events');
  return allEvents.map(event => ({
    params: { 
      locationSlug: slugifyLocation(event.data.location),
      eventSlug: event.slug 
    },
    props: { event },
  }));
}

const { event } = Astro.props;
const { Content } = await event.render();
---

<BaseLayout title={event.data.title}>
  <div class="container">
    <article>
      <header>
        <h1>{event.data.title}</h1>
        <dl class="event-meta">
          <dt>When:</dt>
          <dd>{event.data.dayOfWeek} at {event.data.startTime}{event.data.endTime ? ` - ${event.data.endTime}` : ''}</dd>
          <dt>Where:</dt>
          <dd>{event.data.venue}</dd>
          <dt>Organizer:</dt>
          <dd>{event.data.organizer}</dd>
        </dl>
        <div class="tags">
          {event.data.tags?.map(tag => <wa-tag>{tag}</wa-tag>)}
        </div>
      </header>
      <div class="content">
        <Content />
      </div>
    </article>
  </div>
</BaseLayout>

<style>
  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

    header {
    margin-bottom: 2rem;
    border-bottom: 1px solid var(--wa-color-surface-border);
    padding-bottom: 1rem;
  }

  h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  p {
    margin: 0.75rem 0;
    font-size: 1.1rem;
  }

  .event-meta {
    margin: 1.5rem 0;
  }

  .event-meta dt {
    font-weight: bold;
  }

  .event-meta dd {
    margin-bottom: 1rem;
  }

  .tags {
    margin-top: 1.5rem;
  }

  .tags wa-tag {
    margin-bottom: 0.5rem;
  }

  wa-tag {
    background-color: var(--wa-color-primary-container);
    color: var(--wa-color-on-primary-container);
  }

  .content {
    line-height: 1.7;
    font-size: 1.1rem;
  }
</style>